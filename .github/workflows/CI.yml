name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      version:
        description: "Version string"
        required: true
        default: "0.0.0"
      body:
        description: "Release body"
        required: true
        default: "Release body"

jobs:
  build_linux:
    runs-on: ubuntu-22.04
    environment: Development
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: test Makefile rules
        run: |
          make
          make clean
          make fclean
          make re
      - name: test executable exists with the good name
        run: |
          find "pbrain-gomoku-ai"
      - name: Upload release Artifact
        if: github.event_name == 'workflow_dispatch'
        uses: actions/upload-artifact@v3
        with:
          name: Linux
          path: ${{ github.workspace }}/pbrain-gomoku-ai
      - name: Create release version
        if: github.event_name == 'workflow_dispatch'
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.event.inputs.version }}
          body: ${{ github.event.inputs.body }}
          token: ${{ secrets.GITHUB_TOKEN }}
          files: |
            ${{ github.workspace }}/Linux/pbrain-gomoku-ai

  build_windows:
    runs-on: windows-latest
    environment: Development
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: create exectuable on windows
        run: |
          mkdir -p build
          cd build && cmake .. -DCMAKE_BUILD_TYPE=Release && cmake --build .
      - name: Upload release Artifact
        if: github.event_name == 'workflow_dispatch'
        uses: actions/upload-artifact@v3
        with:
          name: Windows
          path: ${{ github.workspace }}/Debug/pbrain-gomoku-ai.exe
      - name: Create release version
        if: github.event_name == 'workflow_dispatch'
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.event.inputs.version }}
          body: ${{ github.event.inputs.body }}
          token: ${{ secrets.GITHUB_TOKEN }}
          files: ${{ github.workspace }}/Windows/pbrain-gomoku-ai.exe

  coverage:
    needs: [ "build_linux" ]
    runs-on: ubuntu-22.04
    steps:
      - name: Install criterion
        run: |
          sudo apt-get install gcovr
          sudo apt-get install meson
          git clone --recursive https://github.com/Snaipe/Criterion Criterion
          cd Criterion
          meson build
          ninja -C build
          sudo ninja -C build install
          sudo ldconfig
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Build tests
        run: make run_tests
      - name: Build report
        run: gcovr --xml report.xml --exclude tests
      - name: coverage annotation
        run: |
          gcovr -e tests --coveralls coverage.json
        #   >> $GITHUB_STEP_SUMMARY
          gcovr -e tests --branch --coveralls coverage.json
      - name: Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_ACCESS_TOKEN }}
          fail_ci_if_error: false

  mirroring:
    needs: [ "build_linux" ]
    if: github.event_name == 'push'
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: pixta-dev/repository-mirroring-action@v1
        with:
          target_repo_url:
            ${{ secrets.EPI_REPO_URL }}
          ssh_private_key:
            ${{ secrets.EPI_MIRRORING_KEY }}